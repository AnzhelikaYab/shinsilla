from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes
)
from flask import Flask
from threading import Thread
import os

# === –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è UptimeRobot ===
app = Flask('')

@app.route('/')
def home():
    return "–Ø –∂–∏–≤–æ–π!"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    Thread(target=run).start()

# === –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
BOT_TOKEN = os.environ.get("BOT_TOKEN")
ADMIN_ID = os.environ.get("ADMIN_ID")
if ADMIN_ID is None:
    raise ValueError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
else:
    ADMIN_ID = int(ADMIN_ID)

# === –≠—Ç–∞–ø—ã –¥–∏–∞–ª–æ–≥–∞ ===
FIO, IVENT, PHONE = range(3)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ü–µ–Ω—Ç—Ä ¬´–°—Ç—Ä–æ–≥–∏–Ω–æ¬ª. "
        "–ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ü–µ–Ω—Ç—Ä ¬´–°—Ç—Ä–æ–≥–∏–Ω–æ¬ª ‚Äî –º–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø–ª–æ—â–∞–¥–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ª—é–±—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∏ —Å—Ç–µ–ø–µ–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. "
        "–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω –≤ –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥–Ω–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º –æ–∫—Ä—É–≥–µ –≥–æ—Ä–æ–¥–∞ –ú–æ—Å–∫–≤—ã —Ä—è–¥–æ–º —Å–æ —Å—Ç–∞–Ω—Ü–∏–µ–π –º–µ—Ç—Ä–æ ¬´–°—Ç—Ä–æ–≥–∏–Ω–æ¬ª. "
        "–ü–ª–æ—â–∞–¥—å –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 5 783 –∫–≤.–º. –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫—É–ª—å—Ç—É—Ä–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ ‚Äî 750 —á–µ–ª–æ–≤–µ–∫, "
        "–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ü–µ—Ä—Ç–Ω–æ–≥–æ –∑–∞–ª–∞ ‚Äî 510 —á–µ–ª–æ–≤–µ–∫. –î–ª—è –∞—Ä—Ç–∏—Å—Ç–æ–≤ –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω—ã 6 –≥—Ä–∏–º—ë—Ä–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç –≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å—é –¥–æ 150 —á–µ–ª–æ–≤–µ–∫.\n\n"
        "–ö–∞–∫ –º—ã –º–æ–∂–µ–º –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
    )
    return FIO

async def get_fio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['fio'] = update.message.text
    await update.message.reply_text(
        "–ß—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã –ø–ª–æ—â–∞–¥–∫–∏, –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏. "
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ:\n\n1. –î–∞—Ç—É –∏ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.\n2. –û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π.\n3. –§–æ—Ä–º–∞—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–∞–Ω–∫–µ—Ç, —Ñ—É—Ä—à–µ—Ç, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –∏ —Ç.–¥.)."
    )
    return IVENT

async def get_ivent(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['ivent'] = update.message.text
    contact_button = KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    keyboard = ReplyKeyboardMarkup([[contact_button]], resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text("–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=keyboard)
    return PHONE

async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    phone = update.message.contact.phone_number if update.message.contact else update.message.text
    fio = context.user_data['fio']
    ivent = context.user_data.get('ivent', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')
    message = f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\nüë§ –§–ò–û: {fio}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\nüéâ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {ivent}"
    await context.bot.send_message(chat_id=ADMIN_ID, text=message)
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –ú—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END

def main():
    keep_alive()
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            FIO: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_fio)],
            IVENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_ivent)],
            PHONE: [MessageHandler(filters.CONTACT | (filters.TEXT & ~filters.COMMAND), get_phone)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    application.add_handler(conv_handler)
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    application.run_polling()

if __name__ == "__main__":
    main()
